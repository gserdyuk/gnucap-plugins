#############################################################################
# Makefile for building: libhdf5out.so.0.0.1
# Generated by qmake (1.07a) (Qt 3.3.6) on: Wed Mar 31 02:41:50 2010
# Project:  arails_gnucap_hdf5.pro
# Template: lib
# Command: $(QMAKE) -o Makefile arails_gnucap_hdf5.pro
#############################################################################

GNUCAP=		../../gnucap-a/gnucap/
HDF5_INCLUDE=	/usr/local/hdf5-1.8.5-patch1/include
HDF5_LIB=	/usr/local/hdf5-1.8.5-patch1/lib
####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -fPIC  
CXXFLAGS = -pipe -Wall -W -g -fPIC  
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib/qt-3.3/mkspecs/default -I. -I$(GNUCAP)/src -I$(HDF5_INCLUDE)
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libhdf5out.so.0
LIBS     = $(SUBLIBS)  -L$(HDF5_LIB) -lhdf5
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = hdf5io.h \
		hdf5out.h \
		tools.h
SOURCES = hdf5io.cpp \
		hdf5mod.cc
OBJECTS = hdf5io.o \
		hdf5mod.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = arails_gnucap_hdf5.pro
QMAKE_TARGET = hdf5out
DESTDIR  = 
TARGET   = libhdf5out.so.0.0.1
TARGETA	= libhdf5out.a
TARGETD	= libhdf5out.so.0.0.1
TARGET0	= libhdf5out.so
TARGET1	= libhdf5out.so.0
TARGET2	= libhdf5out.so.0.0

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: arails_gnucap_hdf5.pro  /usr/lib/qt-3.3/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile arails_gnucap_hdf5.pro
qmake: 
	@$(QMAKE) -o Makefile arails_gnucap_hdf5.pro

dist: 
	@mkdir -p .tmp/hdf5out && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/hdf5out/ && ( cd `dirname .tmp/hdf5out` && $(TAR) hdf5out.tar hdf5out && $(GZIP) hdf5out.tar ) && $(MOVE) `dirname .tmp/hdf5out`/hdf5out.tar.gz . && $(DEL_FILE) -r .tmp/hdf5out

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) libhdf5out.so libhdf5out.so.0 libhdf5out.so.0.0 libhdf5out.so.0.0.1
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)


FORCE:

####### Compile

hdf5io.o: hdf5io.cpp hdf5io.h

hdf5mod.o: hdf5mod.cc hdf5out.h \
		tools.h \
		hdf5io.h

####### Install

install:  

uninstall:  

