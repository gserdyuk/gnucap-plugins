HDF5 OUTPUT

1. BUILD
--------
a) install HDF5 

b) >export GNUCAP=<where gnucap resides>; 
   note $GNUCAP/src will be used to reach gnucap code

c) >export HDF5_INCLUDE=<where hdf5 includes>
   >export HDF5_LIB=<where hdf5 libs are>

d) >qmake; make
as a result libhdf5out.so.0.0.1 and upper-level links will be created

2. TEST
-------
ensure that HDF5 so libraries can be loaded by dynamic loader (I added LD_LIBRARY_PATH=...)

>$GNUCAP/src/gncuap -a ./libhdf5out.so
gnucap shall be loaded correctly

a bunch of messages like:

dc: already installed, replacing
stashing as dc:0
op: already installed, replacing
stashing as op:0
ac: already installed, replacing
stashing as ac:0
fourier: already installed, replacing
stashing as fourier:0
op: already installed, replacing
stashing as op:1
dc: already installed, replacing
stashing as dc:1
ac: already installed, replacing
stashing as ac:1
transient: already installed, replacing
stashing as transient:0
fourier: already installed, replacing
stashing as fourier:1

shall appear.
That means that all simulations were substituted with anothers, with HDF5 output

3. EXAMPLE
----------

create simple test

>cat <<FILE >ckt1.gckt
* test hdf5 out
r1 1 0 10k
v1 1 0 dc 1
.print op v(1) i(r1) 
.op > file1.hdf5
.print tran v(1) i(r1)
.tran 0.5 100 0 > file2.hdf5
.end
FILE

run gnucap 
>$GNUCAP/src/gncuap -a ./libhdf5out.so -b ckt1.gckt
as a result - you will have two HDF5 files:
file1.hdf5
file2.hdf5

4. APPROACH
-----------
All simulations are substituted with anothers, 
which has HDF5 as primary output method

5. NOTES
--------

Please be sure to separate ">" and "filename" with at least one space
this has to be fixed, but otherwize you will not have any output.


Some minor code glitches still present 
= ">file" will not work, need "> file" only
= some extra output present

NB! did not tested output file validity 
output files (for reference) are stored at ./results

Makefile has to be generated by "gmake", presented here for reference 
